---
const { title } = Astro.props;
---


<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="dark:bg-odark">
		<div class="m-0 w-full h-full">
			<div class="container pl-6 pt-3 font-extrabold text-4xl md:fixed dark:text-white">
				<a href="/vox-portfolio">ol</a>
			</div>
			<slot />
			<div class="pl-6 font-bold text-l text-cgrey fixed bottom-3 dark:text-white">
				<button id="themeToggle">.theme</button>
			</div>
		</div>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}

	* {
		@apply transition-colors duration-200;
		font-family: 'JetBrains Mono', monospace;
	}
</style>

<script is:inline>
	const theme = (() => {
		const localStorageTheme = localStorage?.getItem("theme") ?? '';
		if (['dark', 'light'].includes(localStorageTheme)) {
			return localStorageTheme;
		}
		if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
			return 'dark';
		}
		return 'light';
	})();

	if (theme === 'light') {
		document.documentElement.classList.remove('dark');
	} else {
		document.documentElement.classList.add('dark');
	}

	window.localStorage.setItem('theme', theme);

	const handleToggleClick = () => {
		const element = document.documentElement;
		element.classList.toggle("dark");

		const isDark = element.classList.contains("dark");
		localStorage.setItem("theme", isDark ? "dark" : "light");
	}

	document.getElementById("themeToggle")?.addEventListener("click", handleToggleClick);
</script>
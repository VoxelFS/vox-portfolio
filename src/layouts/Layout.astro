---
import '../styles/global.css';
const { title } = Astro.props;
---


<!doctype html>
<html lang="en" class="theme-default" id="html">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-background">
		<div class="m-0 w-full h-full">
			<div class="container pl-6 pt-3 font-extrabold text-4xl md:fixed text-text">
				<a href="/">ol</a>
			</div>
			<slot />
			<div class="pl-6 font-bold text-l fixed bottom-3 text-textAccent">
				<button id="theme-btn">.theme</button>
			</div>
		</div>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}

	* {
		@apply transition-colors duration-200;
		font-family: 'JetBrains Mono', monospace;
	}
</style>

<script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
		const themes = ['theme-default', 'theme-olivia'];
		const root = document.getElementById('html');

		if (!root) {
			console.error('Root element not found!');
			return;
		}

		function setTheme(theme) {
			themes.forEach(t => root.classList.remove(t));
			root.classList.add(theme);
			localStorage.setItem('theme', theme);
		}

		function cycleTheme() {
			const current = root.classList.value.split(' ').find(c => c.startsWith('theme-')) || 'theme-default';
			const nextIndex = (themes.indexOf(current) + 1) % themes.length;
			setTheme(themes[nextIndex]);
		}

		const stored = localStorage.getItem('theme');
		if (stored && themes.includes(stored)) {
			setTheme(stored);
		}

		const button = document.getElementById('theme-btn');
		if (button) {
			button.addEventListener('click', cycleTheme);
		} else {
			console.warn('Theme button not found');
		}
	});
</script>